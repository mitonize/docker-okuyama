# MasterManager(マスタノード)定義
#joblist=MasterConfigurationManagerJob,MasterManagerJob,ServerManagedJob,ConnectionPoolJob,KeyNodeWatchJob,KeyNodeDataOptimizationJob,HttpGatewayServerJob
joblist=MasterConfigurationManagerJob,MasterManagerJob,ServerManagedJob,KeyNodeWatchJob,KeyNodeDataOptimizationJob
helperlist=MasterConfigurationManagerHelper,MasterManagerHelper,MasterManagerConnectHelper,MasterManagerAcceptHelper,KeyNodeWatchHelper,ConnectionPoolHelper,KeyNodeOptimizationHelper,KeyNodeOptimizationConsistentHashHelper,ServerControllerHelper,ServerTimerHelper

# MasterConfigurationManagerJobの定義
MasterConfigurationManagerJob.JobClass=okuyama.imdst.job.MasterConfigurationManagerJob
MasterConfigurationManagerJob.Init=
MasterConfigurationManagerJob.Option=
MasterConfigurationManagerJob.Depend=

# MasterManagerJobの定義
# MasterManagerJob.Init MasterNode起動IPアドレス:Port番号&バックログ数(変更可)(Portのみ指定 or IP+Portのみ指定 or Port+BackLogのみ指定も可能)
MasterManagerJob.JobClass=okuyama.imdst.job.MasterManagerJob
MasterManagerJob.Init=8888&200
MasterManagerJob.Option=
MasterManagerJob.Depend=

# ServerManagedJobの定義
ServerManagedJob.JobClass=okuyama.imdst.job.ServerManagedJob
ServerManagedJob.Init=
ServerManagedJob.Option=
ServerManagedJob.Depend=

# KeyNodeWatchJobの定義
KeyNodeWatchJob.JobClass=okuyama.imdst.job.KeyNodeWatchJob
KeyNodeWatchJob.Init=
KeyNodeWatchJob.Option=
KeyNodeWatchJob.Depend=

# ConnectionPoolJobの定義
ConnectionPoolJob.JobClass=okuyama.imdst.job.ConnectionPoolJob
ConnectionPoolJob.Init=
ConnectionPoolJob.Option=
ConnectionPoolJob.Depend=

# KeyNodeDataOptimizationJobの定義
KeyNodeDataOptimizationJob.JobClass=okuyama.imdst.job.KeyNodeDataOptimizationJob
KeyNodeDataOptimizationJob.Init=
KeyNodeDataOptimizationJob.Option=
KeyNodeDataOptimizationJob.Depend=


# HttpGatewayServerJobの定義
HttpGatewayServerJob.JobClass=okuyama.imdst.job.HttpGatewayServerJob
HttpGatewayServerJob.Init=8081
HttpGatewayServerJob.Option=127.0.0.1:8888
HttpGatewayServerJob.Depend=


# Helper設定
MasterConfigurationManagerHelper.HelperClass=okuyama.imdst.helper.MasterConfigurationManagerHelper
MasterConfigurationManagerHelper.Init=
MasterConfigurationManagerHelper.Option=


# Init部分のパラメータはクライアントとの無操作時自動切断時間に使われる
# 単位は秒(デフォルトは600秒(10分))
MasterManagerConnectHelper.HelperClass=okuyama.imdst.helper.MasterManagerConnectHelper
MasterManagerConnectHelper.Init=
MasterManagerConnectHelper.Option=

MasterManagerAcceptHelper.HelperClass=okuyama.imdst.helper.MasterManagerAcceptHelper
MasterManagerAcceptHelper.Init=
MasterManagerAcceptHelper.Option=

MasterManagerHelper.HelperClass=okuyama.imdst.helper.MasterManagerHelper
MasterManagerHelper.Init=1
MasterManagerHelper.Option=

KeyNodeWatchHelper.HelperClass=okuyama.imdst.helper.KeyNodeWatchHelper
KeyNodeWatchHelper.Init=
KeyNodeWatchHelper.Option=

ServerControllerHelper.HelperClass=okuyama.imdst.helper.ServerControllerHelper
ServerControllerHelper.Init=18888
ServerControllerHelper.Option=

ServerTimerHelper.HelperClass=okuyama.imdst.helper.ServerTimerHelper
ServerTimerHelper.Init=
ServerTimerHelper.Option=

ConnectionPoolHelper.HelperClass=okuyama.imdst.helper.ConnectionPoolHelper
ConnectionPoolHelper.Init=
ConnectionPoolHelper.Option=

KeyNodeOptimizationHelper.HelperClass=okuyama.imdst.helper.KeyNodeOptimizationHelper
KeyNodeOptimizationHelper.Init=
KeyNodeOptimizationHelper.Option=

KeyNodeOptimizationConsistentHashHelper.HelperClass=okuyama.imdst.helper.KeyNodeOptimizationConsistentHashHelper
KeyNodeOptimizationConsistentHashHelper.Init=
KeyNodeOptimizationConsistentHashHelper.Option=

HttpGatewayServerHelper.HelperClass=okuyama.imdst.helper.HttpGatewayServerHelper
HttpGatewayServerHelper.Init=
HttpGatewayServerHelper.Option=
######################################## MasterNode設定情報 ########################################

### サーバ停止ファイル ###
ServerStopFile=./ServerStop


### 実行許可メソッドNo ###
## 許可するメソッドのNoをカンマで連結して定義する
## 設定しなければ全て許可となる
## 普段は変更する必要はない
ExecutionMethods=
#ExecutionMethods=0,1,2,3,4


### IsolationMode ###
## MasterNode単位でパーティションを作成する場合に使用する
## IsolationModeをtrueにし、
## IsolationPrefixにユニークな5文字(英数のみ)を設定する
IsolationMode=false
IsolationPrefix=XC45G


### 振り分けモード ####
## 全てのMasterNodeで共通の必要がある
## 一度運用を開始すると変更は出来ない
## mod=Key値のhash値をデータノード数で除算したあまりをサーバインデックスとして使用する
## consistenthash=Key値のhash値を利用してConsistentHashアルゴリズムで振り分けを行う
## 設定がない場合はmod
## !!注意!! 複数のMasterNodeを構成する場合はすべてのMasterが同じ設定である必要がある
#DistributionAlgorithm=mod
DistributionAlgorithm=consistenthash

### データ一貫性モード ###
## 取得データの一貫性モード 
## 0=弱一貫性(全てのノード内から適当な1ノードから取得 ※デフォルト)
## 1=中一貫性(常に最後に更新されるノードのデータを取得)
## 2=強一貫性(常に全てのノードのデータの更新時間を比べる)
DataConsistencyMode=0

### 設定情報を取得する場所(file or node) ###
## 設定情報を本ファイルを起動後も参照し続けるか、起動後は本ファイルを一度だけ参照し、
## 以後は、DataNodeに登録されている設定情報を参照するかを決定する
## "file"の場合は本ファイルを参照する
## "node"の場合はDataNodeを参照する
## 設定をしない場合は"node"となる
SystemConfigMode=node

### 自身の情報 ###
## 自身のIPと起動ポート番号を":"区切りで記述
##
## ※使用を推奨
## ※この設定がない場合はメインMasterNodeの自動昇格機能が機能しない
MyNodeInfo=

### メインマスターノードの情報 ###
## 起動時にメインMasterNodeとして認識するノードのIPとポート番号
## 自身がメインMasterNodeの場合は自身の情報を記述
##
## 使用を推奨
MainMasterNodeInfo=

### 全てのマスターノードの情報を"IP:PORT番号"フォーマットで","区切りで記述 ###
## 自身の情報はMyNodeInfo設定の内容と同じであること
##
## ここでの記述順でメインMasterNodeとして機能する
##
## ※使用を推奨
## ※この設定がない場合はメインMasterNodeの自動昇格機能が機能しない
AllMasterNodeInfo=

### メインMasterNodeの設定 ###
# 自身がメインMasterNodeの場合はtrue、スレーブはfalse
# 全MasterNode中1ノードは必ずtrueにする必要がある
# ※旧設定項目
# ※非推奨()
MainMasterNodeMode=

### 本ノードがメインMasterNodeとなる場合はスレーブMasterNodeのIPとPORT番号をカンマ区切りで記述する(例)192.168.1.2:8888,192.168.1.3:8888 ###
# スレーブの場合は記述しない
# ※旧設定項目
# ※非推奨
SlaveMasterNodes=

### Transactionモード及び、TransactionManagerへの接続設定 ###
# TransactionModeで使用するかを設定
# trueの場合は分散Lockを使用出来る
# falseは使用できない
# falseの方が処理速度は高速である
TransactionMode=false

# TransactionManagerのIP、PORT設定("マシンIP:ポート場号,マシンIP:ポート場号"の形式で記述)
TransactionManagerInfo=127.0.0.1:6655


### DataNode遅延書き込み指定 ###
KeyMapDelayWrite=false


### データノード定義 ###
#使用DataNode数
KeyMapNodesRule=2

#使用メインデータノード情報("マシンIP:ポート場号,マシンIP:ポート場号"の形式で記述)
KeyMapNodesInfo=

#使用スレーブデータノード情報("マシンIP:ポート場号,マシンIP:ポート場号"の形式で記述)
#KeyMapNodesInfoに記述されているノード数と同じ数のノードが必要である。上記の"localhost:5553"は"localhost:5556"に
#レプリケーションされ"localhost:5554"は"localhost:5557"にレプリケーションされる。
#稼動後の組み合わせは変更出来ないため、マシン入れ替えの場合は既存のノードを停止し、同様のIP、ポート番号で別ノードを
#起動すると、データがメインデータノードからレプリケーションされる。
#メイン、スレーブどちらかのノードが停止した場合のノード切り替えは自動的に行われる。
#※メインデータノードを入れ替える場合はスレーブデータノードを起動したまま、メインデータノードを停止し、
#  別マシンをメインデータノードのIPとポートで起動すればスレーブデータノードからレプリケーションされる。
SubKeyMapNodesInfo=


## サードデータノード設定
ThirdKeyMapNodesInfo=

# !!!! 以下はデータノードを増設する場合の設定 !!!! 
# 本ファイルを変更保存したと同時にファイルが再読み込みされ設定が自動的に反映される。
#先頭に増設後の台数をカンマ区切りで追記(以下の例は、元々は2台で運用後、4台に増設した場合)
#KeyMapNodesRule=4,2

#現在のノード情報の後方に追記
#(以下の例は、localhost:5553,localhost:5554の2台での運用に対して、localhost:6556,localhost:6557を追加した場合)
#SubKeyMapNodesInfoも同時に追加
#KeyMapNodesInfo=localhost:5553,localhost:5554,localhost:6553,localhost:6554
#SubKeyMapNodesInfo=localhost:5556,localhost:5557,localhost:6556,localhost:6557


### 接続プール設定 ###
# 1データノードに対する接続プールの最大数
OneKeyNodeConnectionPoolMax=4

# データノードに対する接続プール合計の最大数
KeyNodeConnectionPoolMax=20


### ロードバランス設定 ###
# データノードアクセス時に負荷を分散する設定
# 本値はメインデータノードとスレーブデータへの
# アクセスを拡散することで負荷を分散する。
# メインデータノードに対して、スレーブデータノードの
# Specが大幅に劣る場合はfalseの方が良い場合がある
# true=バランスする, false=バランスしない) 
# DataConsistencyModeが"0"の場合のみ機能する
# BalanceRatioは振り分け時の割合(合わせて10にしなければ7:3の割合になる)
LoadBalanceMode=true
BalanceRatio=5:5


### MasterNodeの同時接続処理数 ###
## ここで設定された値までクライアントからの依頼を同時に処理する
## メモリやCPU資源に依存するのでこの値まで処理を保障するものではない
##
## MasterNodeMaxConnectParallelExecution=Accept状態になったSocketをシステムで使用可能な状態に加工するスレッド数
##                                       (本値はMasterNodeMaxConnectParallelQueueの2倍以上であること)
## MasterNodeMaxConnectParallelQueue=MasterNodeMaxConnectParallelExecutionで指定したスレッドが監視する並列キュー数
##
## MasterNodeMaxAcceptParallelExecution=Socketが読み込み対象のデータを持っているかを確認するスレッド数
##                                      (本値はMasterNodeMaxAcceptParallelQueueの2倍以上であること)
## MasterNodeMaxAcceptParallelQueue=MasterNodeMaxAcceptParallelExecutionで指定したスレッドが監視する並列キュー数
##
## MasterNodeMaxWorkerParallelExecution=Socketからデータを取得し実際のメイン処理を実行するスレッド数
##                                      (本値はMasterNodeMaxWorkerParallelQueueの2倍以上であること)
## MasterNodeMaxWorkerParallelQueue=MasterNodeMaxWorkerParallelExecutionで指定したスレッドが監視する並列キュー数
MasterNodeMaxConnectParallelExecution=6
MasterNodeMaxConnectParallelQueue=3
MasterNodeMaxAcceptParallelExecution=8
MasterNodeMaxAcceptParallelQueue=2
MasterNodeMaxWorkerParallelExecution=20
MasterNodeMaxWorkerParallelQueue=4

